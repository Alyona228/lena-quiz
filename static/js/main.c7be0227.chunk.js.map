{"version":3,"sources":["components/Finished.module.css","components/Quize/Quize.module.css","hoc/Layout/Layout.js","components/ActiveQuize/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuize/AnswersList/AnswersList.js","components/ActiveQuize/ActiveQuize.js","components/Finished.js","constants/constants.js","components/Quize/Quize.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","className","this","props","children","React","Component","AnswerItem","cls","state","push","join","onClick","onAnswerClick","answer","id","text","AnswersList","answers","map","index","key","ActiveQuize","answerNumber","question","quizLength","Finished","successCount","Object","keys","results","reduce","total","classes","finished","quiz","quizItem","length","fini","Quize","isFinished","activeQuestion","answerState","rightAnswerId","onAnswerClickHandler","answerId","setState","setTimeout","isQuizFinished","quize","error","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c7be0227.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"finished\":\"Finished_finished__2lnrr\",\"i\":\"Finished_i__2qS5B\",\"success\":\"Finished_success__UyMgx\",\"error\":\"Finished_error__1Wc4t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quize\":\"Quize_quize__8iKXR\",\"text\":\"Quize_text__2JI_1\",\"active\":\"Quize_active__VpRhn\"};","import React from 'react'\r\nimport './Layout.css'\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={'layout'}>\r\n        <main className={'LayoutMain'}>{this.props.children}</main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Layout\r\n","import React from 'react'\r\nimport './AnswerItem.css'\r\nconst AnswerItem = (props) => {\r\n  const cls = ['AnswerItem', 'answeritem']\r\n\r\n  if (props.state) {\r\n    cls.push(props.state)\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={cls.join(' ')}\r\n      onClick={() => props.onAnswerClick(props.answer.id)}\r\n    >\r\n      {props.answer.text}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default AnswerItem\r\n","import React from 'react'\r\nimport './AnswersList.css'\r\nimport AnswerItem from './AnswerItem/AnswerItem.js'\r\n\r\nconst AnswersList = (props) => {\r\n  // console.log(1, props.onAnswerClick)\r\n  return (\r\n    <ul className='answerslist'>\r\n      {props.answers.map((answer, index) => {\r\n        return (\r\n          <AnswerItem\r\n            key={index}\r\n            answer={answer}\r\n            onAnswerClick={props.onAnswerClick}\r\n            state={props.state ? props.state[answer.id] : null}\r\n          />\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default AnswersList\r\n","import React from 'react'\r\nimport './ActiveQuize.css'\r\nimport AnswersList from './AnswersList/AnswersList.js'\r\n\r\nconst ActiveQuize = (props) => {\r\n  return (\r\n    <div className='activequize'>\r\n      <p className='question'>\r\n        <span>\r\n          <strong>{props.answerNumber}.</strong>&nbsp; {props.question}\r\n        </span>\r\n        <small>\r\n          {props.answerNumber} из {props.quizLength}\r\n        </small>\r\n      </p>\r\n      <AnswersList\r\n        state={props.state}\r\n        answers={props.answers}\r\n        onAnswerClick={props.onAnswerClick}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActiveQuize\r\n","import React from 'react'\r\nimport { ERROR, SUCCESS } from '../constants/constants'\r\nimport classes from './Finished.module.css'\r\n\r\nconst Finished = (props) => {\r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if (props.results[key] === SUCCESS) {\r\n      total++\r\n    }\r\n\r\n    return total\r\n  }, 0)\r\n  return (\r\n    <div className={classes.finished}>\r\n      <ul>\r\n        {props.quiz.map((quizItem, index) => {\r\n          const cls = [\r\n            'fa',\r\n            props.results[quizItem.id] === ERROR ? 'fa-times' : 'fa-check',\r\n            classes[props.results[quizItem.id]],\r\n          ]\r\n          return (\r\n            <li key={index}>\r\n              <strong>{index + 1}</strong>. &nbsp;\r\n              {quizItem.question} &nbsp;\r\n              <i className={cls.join(' ')} />\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n      <p>\r\n        Правильно {successCount} из {props.quiz.length}\r\n      </p>\r\n\r\n      <div>\r\n        <button className={classes.fini}>Повторить</button>\r\n        <button className={classes.fini}>Пройти ещё раз</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Finished\r\n","export const SUCCESS = 'success'\r\nexport const ERROR = 'error'","import React from 'react'\r\nimport classes from './Quize.module.css'\r\nimport ActiveQuize from '../../components/ActiveQuize/ActiveQuize'\r\nimport Finished from '../../components/Finished.js'\r\nimport { ERROR, SUCCESS } from '../../constants/constants'\r\nclass Quize extends React.Component {\r\n  state = {\r\n    results: {}, //  {[id]: success error}\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    // { [id]: 'success' 'error' }\r\n    quiz: [\r\n      {\r\n        question: 'Какого цвета небо?',\r\n        rightAnswerId: 2,\r\n        id: 0,\r\n        answers: [\r\n          { text: 'Черный', id: 1 },\r\n          { text: 'Синий', id: 2 },\r\n          { text: 'Красный', id: 3 },\r\n          { text: 'Зеленый', id: 4 },\r\n        ],\r\n      },\r\n      {\r\n        question: 'В каком году основали Санкт-Петербург?',\r\n        rightAnswerId: 3,\r\n        id: 1,\r\n        answers: [\r\n          { text: '1700', id: 1 },\r\n          { text: '1702', id: 2 },\r\n          { text: '1703', id: 3 },\r\n          { text: '1803', id: 4 },\r\n        ],\r\n      },\r\n\r\n      {\r\n        question: 'Когда всё началось?',\r\n        rightAnswerId: 1,\r\n        id: 2,\r\n        answers: [\r\n          { text: '2017', id: 1 },\r\n          { text: '2020', id: 2 },\r\n          { text: '2016', id: 3 },\r\n          { text: '2015', id: 4 },\r\n        ],\r\n      },\r\n      {\r\n        question: 'Как меня зовут?',\r\n        rightAnswerId: 4,\r\n        id: 3,\r\n        answers: [\r\n          { text: 'Алёна', id: 1 },\r\n          { text: 'Миша', id: 2 },\r\n          { text: 'Клава', id: 3 },\r\n          { text: 'Шарик', id: 4 },\r\n        ],\r\n      },\r\n      {\r\n        question: 'Что такое xPON?',\r\n        rightAnswerId: 2,\r\n        id: 4,\r\n        answers: [\r\n          { text: 'Fiber to the Building', id: 1 },\r\n          { text: 'Passive optical network', id: 2 },\r\n          { text: 'активная оптическая сеть', id: 3 },\r\n          { text: 'местная телефонная сеть', id: 4 },\r\n        ],\r\n      },\r\n      {\r\n        question: 'Диапазон покрытия сети xPON ?',\r\n        rightAnswerId: 3,\r\n        id: 5,\r\n        answers: [\r\n          { text: '100 км', id: 1 },\r\n          { text: '5 км', id: 2 },\r\n          { text: 'до 20 км', id: 3 },\r\n          { text: 'от 20 до 50 км', id: 4 },\r\n        ],\r\n      },\r\n      {\r\n        question: 'Сколько абонентов можно подключить на один порт OLT ?',\r\n        rightAnswerId: 1,\r\n        id: 6,\r\n        answers: [\r\n          { text: '64', id: 1 },\r\n          { text: '48', id: 2 },\r\n          { text: '16', id: 3 },\r\n          { text: '4', id: 4 },\r\n        ],\r\n      },\r\n      {\r\n        question: 'Какое затухание вносит сплиттер 1:4 ?',\r\n        rightAnswerId: 4,\r\n        id: 7,\r\n        answers: [\r\n          { text: '2dB км', id: 1 },\r\n          { text: '7Mb', id: 2 },\r\n          { text: '20 dB', id: 3 },\r\n          { text: '7,4 dB', id: 4 },\r\n        ],\r\n      },\r\n      {\r\n        question:\r\n          'Что означает маркировка Патч-корд оптический SC/UPC – SC/UPC Simplex 5м?',\r\n        rightAnswerId: 2,\r\n        id: 8,\r\n        answers: [\r\n          { text: 'Что у него в названии есть четыре буквы', id: 1 },\r\n          {\r\n            text:\r\n              'Пачкорд, состоящий из одной жилы оптического или пластикового волокна и наружной оболочки.Тип коннектора- SC, тип полировки- UPC, длина 5м',\r\n            id: 2,\r\n          },\r\n          { text: 'что это делитель оптического потока', id: 3 },\r\n          { text: 'что расстояние от модема до ПК должно быть 5м', id: 4 },\r\n        ],\r\n      },\r\n    ],\r\n  }\r\n\r\n  onAnswerClickHandler = (answerId) => {\r\n    if (this.state.answerState) {\r\n      const key = Object.keys(this.state.answerState)[0]\r\n      if (this.state.answerState[key] === SUCCESS) {\r\n        return\r\n      }\r\n    }\r\n    \r\n    const question = this.state.quiz[this.state.activeQuestion]\r\n    const results = this.state.results\r\n    if (question.rightAnswerId === answerId) {\r\n      if (!results[this.state.activeQuestion]) {\r\n        results[this.state.activeQuestion] = SUCCESS\r\n      }\r\n      this.setState({\r\n        answerState: { [answerId]: SUCCESS },\r\n        results,\r\n      })\r\n      setTimeout(() => {\r\n        if (this.isQuizFinished()) {\r\n          this.setState({\r\n            isFinished: true,\r\n          })\r\n        } else {\r\n          this.setState({\r\n            activeQuestion: this.state.activeQuestion + 1,\r\n            answerState: null,\r\n          })\r\n        }\r\n      }, 1000)\r\n    } else {\r\n      results[this.state.activeQuestion] = ERROR\r\n      this.setState({\r\n        answerState: { [answerId]: ERROR },\r\n        results,\r\n      })\r\n      setTimeout(() => {\r\n        this.setState({\r\n          answerState: null,\r\n        })\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  isQuizFinished() {\r\n    return this.state.activeQuestion + 1 === this.state.quiz.length\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.quize + ' ' + classes.error}>\r\n        <div className='active'>\r\n          <h1 className='text'>\r\n            Ответьте на все вопросы теста и станьте специалистом\r\n          </h1>\r\n          {this.state.isFinished ? (\r\n            <Finished results={this.state.results} quiz={this.state.quiz} />\r\n          ) : (\r\n            <ActiveQuize\r\n              question={this.state.quiz[this.state.activeQuestion].question}\r\n              answers={this.state.quiz[this.state.activeQuestion].answers}\r\n              onAnswerClick={this.onAnswerClickHandler}\r\n              quizLength={this.state.quiz.length}\r\n              answerNumber={this.state.activeQuestion + 1}\r\n              state={this.state.answerState}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Quize\r\n","import React, { Component } from 'react'\nimport Layout from './hoc/Layout/Layout.js'\nimport Quize from './components/Quize/Quize.js'\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <Quize />\n      </Layout>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}